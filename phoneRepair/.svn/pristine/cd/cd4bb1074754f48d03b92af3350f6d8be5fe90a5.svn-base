package com.etc.repair.web;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.lang.reflect.InvocationTargetException;
import java.sql.SQLException;
import java.text.DateFormat;
import java.util.Date;
import java.util.List;
import java.util.UUID;

import javax.servlet.ServletException;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.fileupload.FileItem;
import org.apache.commons.fileupload.FileUploadException;
import org.apache.commons.fileupload.disk.DiskFileItemFactory;
import org.apache.commons.fileupload.servlet.ServletFileUpload;

import com.etc.repair.biz.StoreBiz;
import com.etc.repair.vo.Store;

import net.sf.json.JSONArray;

/**
 * Servlet implementation class StoreServlet
 */
public class StoreServlet extends HttpServlet {
	StoreBiz sBiz = new StoreBiz();
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public StoreServlet() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		String method = request.getParameter("method");
		//是否存在这个商家
		if("isExistStore".equals(method)){
			String susername = request.getParameter("susername");
			isExistStore(susername,request,response);
		}else if("getCode".equals(method)){
			getCode(request,response);
		}else if("regist".equals(method)){
			regist(request,response);
		}else if("login".equals(method)){
			String susername = request.getParameter("susername");
			String spassword = request.getParameter("spassword");
			String isAutoLogin = request.getParameter("isAutoLogin");
			login(request,response,susername,spassword,isAutoLogin);
		}else if("getStore".equals(method)){
			getStore(request,response);
		}else if("show".equals(method)){
			show(request,response);
		}
		
	}
	
	/**
	 * index开始展示6条数据
	 * @param request
	 * @param response
	 */
	private void show(HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		//System.out.println("请求进来了");
		try {
			List<Store> list = sBiz.show();
			JSONArray json = new JSONArray();
			json = json.fromObject(list);
			response.getWriter().println(json);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} 
	}

	/**
	 * 通过省市去获取商店
	 * @param request
	 * @param response
	 */
	private void getStore(HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		String searchAddress = request.getParameter("searchAddress");
		try {
			List<Store> list = sBiz.getStore(searchAddress);
			//获取到了list然后把它弄到页面上
			JSONArray json = new JSONArray();
			json = json.fromObject(list);
			response.getWriter().println(json);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} 
	}

	/**
	 * 登录
	 * @param request
	 * @param response
	 * @param susername
	 * @param spassword
	 * @param isAutoLogin 
	 */
	private void login(HttpServletRequest request, HttpServletResponse response, String susername, String spassword, String isAutoLogin) {
		// TODO Auto-generated method stub
		Store store = null;
		try {
			store = sBiz.login(susername,spassword);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		if(store==null){
			//商家为空,则登录失败			
			try {
				response.getWriter().print("用户名和密码不匹配,3秒之后跳转");
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			// 案例2-定时跳转
			response.setHeader("refresh", "3;url=" + request.getContextPath()+"/jsp/slogin.jsp");
		}else{
			//登陆成功
			if(isAutoLogin!=null){
				//这是存的记住账号信息
				Cookie cUsername = new Cookie("username",store.getSusername());
				Cookie cPwd = new Cookie("password",store.getSpassword());
				response.addCookie(cUsername);
				response.addCookie(cPwd);
			}
			//只要商家登录成功,就把它放到session中
			HttpSession session = request.getSession();
			session.setAttribute("store", store);
			try {
				response.getWriter().write("登陆成功,3秒之后跳转");
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			response.setHeader("refresh", "3;url=" + request.getContextPath()+"/jsp/smain.jsp");
		}
	}

	/**
	 * 注册
	 * @param request
	 * @param response
	 */
	private void regist(HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		//1.获取字段sid;
		response.setContentType("text/html;charset=utf-8");
		getForm(request,response);
		String susername = (String) request.getAttribute("susername");
		String spassword = (String) request.getAttribute("spassword");
		String sname = (String) request.getAttribute("sname");
		String saddress = (String) request.getAttribute("saddress");
		String spic = (String) request.getAttribute("spic");
		String stime = (String) request.getAttribute("stime");
		String sdesc = (String) request.getAttribute("sdesc");
		boolean flag = false;
		try {
			flag = sBiz.regist(susername,spassword,sname,saddress,spic,stime,sdesc);
		} catch (Exception e1) {
			e1.printStackTrace();
		}
		if(flag){
		//注册成功
			try {
				response.getWriter().write("注册成功,3秒之后跳转");
			} catch (Exception e) {
				e.printStackTrace();
			}
			response.setHeader("refresh", "3;url=" +request.getContextPath()+"/jsp/slogin.jsp");
		}else{
			try {
				response.getWriter().write("注册失败,3秒之后跳转");
			} catch (IOException e) {
				e.printStackTrace();
			}
			response.setHeader("refresh", "3;url=" + request.getContextPath()+"/jsp/sregist.jsp");
		}
	}

	/**
	 * 获取表单字段
	 * @param request
	 * @param response
	 */
	private void getForm(HttpServletRequest request, HttpServletResponse response) {
		try{
			request.setCharacterEncoding("UTF-8");
			response.setContentType("text/html;charset=UTF-8");
			PrintWriter pw = response.getWriter();
			try {
				DiskFileItemFactory factory = new DiskFileItemFactory();
				String storePath = getServletContext().getRealPath("/upload");
				boolean isMultipart = ServletFileUpload.isMultipartContent(request);
				if (!isMultipart) {
					pw.write("传输方式有错误！");
					return;
				}
				ServletFileUpload upload = new ServletFileUpload(factory);
				upload.setFileSizeMax(4 * 1024 * 1024);
				upload.setSizeMax(6 * 1024 * 1024);
				
				List<FileItem> items = upload.parseRequest(request);
				for (FileItem item : items) {
					//如果不是普通表单字段
					if (!item.isFormField()) {
						String mimeType = item.getContentType();
						if (mimeType.startsWith("image")) {
							InputStream in = item.getInputStream();
							String fileName = item.getName();
							if (fileName == null || "".equals(fileName.trim())) {
								continue;
							}
							fileName = fileName.substring(fileName.lastIndexOf("\\") + 1);
							String newStorePath = makeStorePath(storePath);
							String id = UUID.randomUUID().toString().replaceAll("-", "");
							String ext = fileName.substring(fileName.lastIndexOf("."));
							String storeFile = newStorePath + "\\" + id + ext;
							String path[] = storeFile.split("webapps");
							String requirePath = path[1];
							request.setAttribute("spic", requirePath);
							OutputStream out = new FileOutputStream(storeFile);
							byte[] b = new byte[1024];
							int len = -1;
							while ((len = in.read(b)) != -1) {
								out.write(b, 0, len);
							}
							in.close();
							out.close();
							item.delete();
						} else {
							request.setAttribute("msg", "上传文件格式有错误！");
						}
					}else{
						String name = item.getFieldName();  
			            String value = item.getString();
			            value = new String(value.getBytes("iso-8859-1"),"utf-8");
			            //System.out.println(name+" "+value);
			            request.setAttribute(name, value);
					}
				}
			} catch (org.apache.commons.fileupload.FileUploadBase.FileSizeLimitExceededException e) {
				request.setAttribute("msg", "单个文件不能超过4M");
			} catch (org.apache.commons.fileupload.FileUploadBase.SizeLimitExceededException e) {
				request.setAttribute("msg", "文件总和不能超过6M");
			} catch (FileUploadException e) {
				request.setAttribute("msg", "文件上传失败");
			}
		}catch(Exception e){
			e.printStackTrace();
		}
	}

	/**
	 * 建立路径
	 * @param storePath
	 * @return
	 */
	private String makeStorePath(String storePath) {
		// TODO Auto-generated method stub
		Date date = new Date();
		DateFormat df = DateFormat.getDateInstance(DateFormat.MEDIUM);
		String s = df.format(date);
		String path = storePath + "\\" +"store"+"\\"+ s;
		File file = new File(path);
		if (!file.exists()) {
			file.mkdirs();// 创建多级目录，mkdir只创建一级目录
		}
		return path;
	}

	/**
	 * 获取验证码
	 * @param response 
	 * @param request 
	 */
	private void getCode(HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		String code = request.getParameter("msg");
		//System.out.println(code);
		//获取生成的验证码
		HttpSession session = request.getSession();//创建session
		String code1 = (String)session.getAttribute("code");
		//System.out.println("---"+code1);
		int result = 0;
		//判断验证码
		if(code != null && code1.equalsIgnoreCase(code)){
			result = 1;
		}else{
			result = 0;
		}
		//将数据传到前台
		try {
			response.getWriter().print(result);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/**
	 * 是否存在用户
	 * @param susername
	 * @param request
	 * @param response
	 */
	private void isExistStore(String susername, HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		boolean flag;
		try {
			flag = sBiz.isExistStore(susername);
			if(flag){
				//存在这个用户
				response.getWriter().print(1);
			}else{
				//不存在这个用户
				response.getWriter().print(0);
			}
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} 
		
		
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

}
